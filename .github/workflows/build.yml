#
# build.yml - GitHub build action for libserialport adapted from AVRDUDE
# Copyright (C) 2021 Marius Greuel
# Copyright (C) 2024 Hans Ulrich Niedermann
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

name: Build

on:
  push:
    branches-ignore:
      - 'onlinedocs'
  pull_request:
    branches-ignore:
      - 'onlinedocs'
  workflow_call:

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  linux-x86_64-autotools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: >-
          sudo apt-get update

          sudo apt-get install -y
          build-essential
          automake
          libtool
      - name: Configure
        run: >-
          ./autogen.sh

          mkdir _atbuild && cd _atbuild

          ../configure
          --prefix=/usr/local
      - name: Build
        run: make -C _atbuild -j$(nproc)
      - name: Install
        run: sudo make -C _atbuild install DESTDIR=$PWD/_d
      - name: List installed files
        run: find _d | env LC_ALL=C sort | sed 's|^_d||'
      - name: distcheck
        run: make -C _atbuild -j$(nproc) distcheck

  linux-x86_64-cmake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: >-
          sudo apt-get update

          sudo apt-get install -y
          build-essential
          cmake
      - name: Configure
        run: >-
          cmake
          -B build
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -D CMAKE_INSTALL_PREFIX:PATH=/usr/local
      - name: Build
        run: cmake --build build
      - name: Install
        run: sudo cmake --build build --target install DESTDIR=$PWD/_d
      - name: List installed files
        run: find _d | env LC_ALL=C sort | sed 's|^_d||'

  linux:
    runs-on: ubuntu-latest
    container: debian:11
    strategy:
      matrix:
        include:
          - { arch: i386, processor: i686, prefix: i686-linux-gnu, inc-lib: i386-linux-gnu }
          - { arch: armhf, processor: armhf, prefix: arm-linux-gnueabihf, inc-lib: arm-linux-gnueabihf }
          - { arch: arm64, processor: aarch64, prefix: aarch64-linux-gnu, inc-lib: aarch64-linux-gnu }
    steps:
      - uses: actions/checkout@v3
      - name: Add architecture
        run: |
          dpkg --add-architecture ${{matrix.arch}}
          apt-get update
      - name: Install prerequisites
        run: >-
          apt-get update

          apt-get install -y
          git
          cmake
          crossbuild-essential-${{matrix.arch}}
      - name: Configure
        run: >-
          cmake
          -D DEBUG_CMAKE=1
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -D CMAKE_SYSTEM_NAME=Linux
          -D CMAKE_SYSTEM_PROCESSOR=${{matrix.processor}}
          -D CMAKE_C_COMPILER=${{matrix.prefix}}-gcc
          -D CMAKE_FIND_ROOT_PATH=/usr/${{matrix.prefix}}
          -D CMAKE_INCLUDE_PATH=/usr/include/${{matrix.inc-lib}}
          -D CMAKE_LIBRARY_PATH=/usr/lib/${{matrix.inc-lib}}
          -B build
      - name: Build
        run: cmake --build build
